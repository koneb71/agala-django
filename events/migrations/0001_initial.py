# Generated by Django 4.1.2 on 2022-11-11 17:58

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, help_text='Name of the event. 40 Characters is advised limit.', max_length=120)),
                ('start', models.DateTimeField(verbose_name='Event Start Timings')),
                ('end', models.DateTimeField(verbose_name='Event End Timings')),
                ('description', models.TextField(verbose_name='Event Description')),
                ('remark', models.CharField(blank=True, max_length=255, null=True, verbose_name='Special Remark for Users')),
                ('address', models.TextField(blank=True, help_text='Enter address of the event', null=True, verbose_name='Where')),
                ('slug', models.SlugField(default=None, help_text='Just put the location name here without /', max_length=500, null=True, unique=True, verbose_name='URL Handle')),
                ('status', models.CharField(choices=[('published', 'Published'), ('draft', 'Draft')], default='draft', max_length=120)),
                ('google_map_url', models.URLField(default='https://www.google.com/maps', help_text='Paste the google map url here', max_length=500, verbose_name='Google Map Link')),
                ('pin_code', models.CharField(blank=True, help_text='If you leave this field blank it will auto generate a PIN code.', max_length=6, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(4, message='Must be 4 to 6 characters')])),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ('start',),
            },
        ),
        migrations.CreateModel(
            name='EventTicket',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_free', models.BooleanField(default=False, verbose_name='This is Free Ticket')),
                ('remaining_count', models.IntegerField()),
                ('price', models.FloatField()),
                ('sales_start_date', models.DateField(blank=True, default=None, help_text='If this is empty it will use the event creation date', null=True)),
                ('sales_end_date', models.DateField(blank=True, default=None, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketOrder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_price', models.FloatField()),
                ('sent_ticket_to', models.EmailField(max_length=254)),
                ('contact_name', models.CharField(max_length=120, null=True, verbose_name="Buyer's Name")),
                ('contact_club', models.DateField(null=True, verbose_name="Buyer's Club")),
                ('contact_id', models.CharField(max_length=200, null=True, verbose_name="Buyer's ID Card Number")),
                ('contact_mobile', models.CharField(max_length=80, null=True, verbose_name='Contact Number')),
                ('order_num', models.CharField(max_length=20, null=True)),
                ('delivery_status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered')], default='delivered', max_length=80)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketOrderDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('count', models.IntegerField()),
                ('price', models.FloatField()),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='events.ticketorder')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='events.eventticket')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketDetail',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120)),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True)),
                ('used', models.BooleanField(default=False)),
                ('contact_id', models.CharField(blank=True, max_length=200, null=True)),
                ('mobile_num', models.CharField(blank=True, max_length=80, null=True)),
                ('qrcode', models.URLField(null=True)),
                ('order_details', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='events.ticketorderdetail')),
            ],
            options={
                'verbose_name': 'Attendee Information',
            },
        ),
    ]
